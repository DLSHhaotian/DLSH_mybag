<launch>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find ecocar_gazebo)/worlds/proto_moresteps.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="recording" value="false"/>
    <arg name="debug" value="true"/>
  </include>


  <!--<node pkg="tf2_ros" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0 0 0 0 odom base_link"/>-->

  <!-- Convert xacro to URDF -->
  <param name="robot_description" command="$(find xacro)/xacro $(find ecocar_description)/urdf/ecocar.xacro" />

  <!-- Spawn Ecocar from URDF -->
  <!--<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find ecocar_description)/urdf/ecocar.urdf -urdf -z 1 -model ecocar" />-->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model ecocar" />

  <!-- Gives /tf and /tf_static  -->
  <node name="robot_state_published" pkg="robot_state_publisher" type="state_publisher" />

  <!-- Node for organizing gyro_angle and teensy_read topics from raw topics -->
  <node name="topic_organizer" pkg="ecocar_gazebo" type="topic_organizer" />


  <!--<node name="plot" pkg="rqt_plot" type="rqt_plot"/>-->

</launch>
